lrpTreePlot(LONGTREEResults)
terms(LONGTREEResults$fixedFormula)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
?plot.nls
library(longRPart2)
lrpTreePlot(LONGTREEResults)
lrpTreePlot(lcart.mod1)
library(longRPart2)
lrpTreePlot(lcart.mod1)
library(longRPart2)
lrpTreePlot(lcart.mod1)
lrpTreePlot(LONGTREEResults)
?plot.lme
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(lcart.mod1)
library(longRPart2)
lrpTreePlot(lcart.mod1)
lrpTreePlot(LONGTREEResults)
plot(lcart.mod1)
lrp2Plot(lcart.mod1)
lrpPlot(lcart.mod1)
library(longRPart2)
library(longRPart2)
library(longRPart2)
lrp2Plot(lcart.mod1)
lcart.mod1 <- longRPart2(method="lme",
fixedFormula=verbal ~ grade,
rPartFormula = ~ Moeducat + noise,
randomFormula=~1|id,
data=wisc.long,
min.dev=20)
lcart.mod1 <- lrp(method="lme",
fixedFormula=verbal ~ grade,
rPartFormula = ~ Moeducat + noise,
randomFormula=~1|id,
data=wisc.long,
control=rpart.control(cp=.01))
lrp2Plot(lcart.mod1)
lrpPlot(LONGTREEResults)
library(longRPart2)
?facet_wrap
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
#wisc <- read.table("C:/Users/RJacobucci/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
wisc <- read.table("C:/Users/rjacobuc/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
#wisc <- read.table(file.choose()) # use directory to find wisc4vpe.dat
names(wisc)<- c("V1","V2","V4","V6","P1","P2","P4", "P6", "Moeducat")
# install longRPart2 from source
wisc.verb <- wisc[,c(1:4,9)]
# create subset for plotting
ntot <- nrow(wisc.verb)    # total number of observations
wisc.verb.sel <- wisc.verb[sample(ntot, 30), ]
wisc.long <- reshape(wisc.verb, varying = c("V1", "V2", "V4", "V6"), v.names = "verbal",
times = c(1, 2, 4, 6), direction = "long")
wisc.long.sel <- reshape(wisc.verb.sel, varying = c("V1", "V2", "V4", "V6"),
v.names = "verbal", times = c(1, 2, 4, 6),
direction = "long")
head(wisc.long,3)
names(wisc.long)[2] <- "grade"
names(wisc.long.sel)[2] <- "grade"
## longRPart2
lcart.mod1 <- longRPart2(method="lme",
fixedFormula=verbal ~ grade,
rPartFormula = ~ Moeducat,
randomFormula=~1|id,
data=wisc.long)
library(longRPart2)
#wisc <- read.table("C:/Users/RJacobucci/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
wisc <- read.table("C:/Users/rjacobuc/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
#wisc <- read.table(file.choose()) # use directory to find wisc4vpe.dat
names(wisc)<- c("V1","V2","V4","V6","P1","P2","P4", "P6", "Moeducat")
# install longRPart2 from source
wisc.verb <- wisc[,c(1:4,9)]
# create subset for plotting
ntot <- nrow(wisc.verb)    # total number of observations
wisc.verb.sel <- wisc.verb[sample(ntot, 30), ]
wisc.long <- reshape(wisc.verb, varying = c("V1", "V2", "V4", "V6"), v.names = "verbal",
times = c(1, 2, 4, 6), direction = "long")
wisc.long.sel <- reshape(wisc.verb.sel, varying = c("V1", "V2", "V4", "V6"),
v.names = "verbal", times = c(1, 2, 4, 6),
direction = "long")
head(wisc.long,3)
names(wisc.long)[2] <- "grade"
names(wisc.long.sel)[2] <- "grade"
## longRPart2
lcart.mod1 <- longRPart2(method="lme",
fixedFormula=verbal ~ grade,
rPartFormula = ~ Moeducat,
randomFormula=~1|id,
data=wisc.long)
lcart.mod1 <- lrp(method="lme",
fixedFormula=verbal ~ grade,
rPartFormula = ~ Moeducat,
randomFormula=~1|id,
data=wisc.long)
plot(lcart.mod1);text(lcart.mod1)
library(longRPart2)
lcart.mod1 <- lrp(method="lme",
fixedFormula=verbal ~ grade,
rPartFormula = ~ Moeducat,
randomFormula=~1|id,
data=wisc.long)
plot(lcart.mod1)
lcart.mod1
library(longRPart2)
plot(lcart.mod1)
plot.lrp(lcart.mod1)
plot(lcart.mod1)
?plot
library(longRPart2)
library(longRPart2)
lcart.mod1 <- lrp(method="lme",
fixedFormula=verbal ~ grade,
rPartFormula = ~ Moeducat,
randomFormula=~1|id,
data=wisc.long)
plot(lcart.mod1)
coef(lcart.mod1$rpart_out)
lcart.mod1$rpart_out
str(lcart.mod1$rpart_out)
lcart.mod1$rpart_out$splits
lcart.mod1$summary
coef(lcart.mod1$summary)
lcart.mod1$fixed_effects
lcart.mod1$fixed_effects
length(lcart.mod1$fixed_effects)
unlist(lcart.mod1$fixed_effects)
for(i in 1:length(lcart.mod1$fixed_effects))}{
lcart.mod1$fixed_effects[[i]]
}
for(i in 1:length(lcart.mod1$fixed_effects)){
lcart.mod1$fixed_effects[[i]]
}
mat <- data.frame()
mat <- data.frame()
for(i in 1:length(lcart.mod1$fixed_effects)){
mat <- cbind(mat,lcart.mod1$fixed_effects[[i]])
}
mat <- data.frame()
for(i in 1:length(lcart.mod1$fixed_effects)){
mat <- data.frame(mat,lcart.mod1$fixed_effects[[i]])
}
?unlist
unlist(lcart.mod1$fixed_effects,recursive=FALSE)
lcart.mod1
mat <- matrix(NA,length(lcart.mod1$fixed_effects),6)
mat <- data.frame()
for(i in 1:length(lcart.mod1$fixed_effects)){
mat <- cbind(lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
}
mat
lcart.mod1$fixed_effects[[i]]
lcart.mod1$resid.var[[i]]
mat <- data.frame()
for(i in 1:length(lcart.mod1$fixed_effects)){
mat[i,] <- cbind(lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
}
mat <- list()
for(i in 1:length(lcart.mod1$fixed_effects)){
mat[[i]] <- cbind(lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
}
mat
lcart.mod1$fixed_effects[[i]]
mat <- list()
for(i in 1:length(lcart.mod1$fixed_effects)){
mat[[i]] <- rbind(lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
}
mat
str(lcart.mod1$fixed_effects[[i]])
str(lcart.mod1$resid.var[[i]])
mat <- list()
for(i in 1:length(lcart.mod1$fixed_effects)){
mat[[i]] <- as.matrix(lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
}
mat <- list()
for(i in 1:length(lcart.mod1$fixed_effects)){
mat[[i]] <- matrix(lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
}
matrix(lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
mat <- list()
for(i in 1:length(lcart.mod1$fixed_effects)){
count=1
if(is.null(lcart.mod1$fixed_effects[[i]])){
count=count
}else{
mat[[count]] <- matrix(lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
}
}
mat
mat <- list()
for(i in 1:length(lcart.mod1$fixed_effects)){
count=1
if(is.null(lcart.mod1$fixed_effects[[i]])){
count=count
}else{
count = count+1
mat[[count]] <- matrix(lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
}
}
mat
mat <- list()
count=1
for(i in 1:length(lcart.mod1$fixed_effects)){
if(is.null(lcart.mod1$fixed_effects[[i]])){
count=count
}else{
count = count+1
mat[[count]] <- matrix(lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
}
}
mat
mat <- list()
count=1
for(i in 1:length(lcart.mod1$fixed_effects)){
if(is.null(lcart.mod1$fixed_effects[[i]])){
count=count
}else{
count = count+1
mat[[count]] <- c(lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
}
}
mat
unlist(mat)
matrix(unlist(mat),byrow=T)
matrix(unlist(mat),byrow=F)
matrix(unlist(mat),nrow=count,byrow=F)
matrix(unlist(mat),nrow=count,byrow=T)
library(longRPart2)
lcart.mod1 <- lrp(method="lme",
fixedFormula=verbal ~ grade,
rPartFormula = ~ Moeducat,
randomFormula=~1|id,
data=wisc.long)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
library(longRPart2)
lcart.mod1 <- lrp(method="lme",
fixedFormula=verbal ~ grade,
rPartFormula = ~ Moeducat,
randomFormula=~1|id,
data=wisc.long)
summary(lcart.mod1)
mat <- list()
count=1
for(i in 1:length(lcart.mod1$fixed_effects)){
if(is.null(lcart.mod1$fixed_effects[[i]])){
count=count
}else{
count = count+1
mat[[count]] <- c(count,lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
}
}
mat
i=1
lcart.mod1$fixed_effects[[i]]
is.null(lcart.mod1$fixed_effects[[i]])
mat <- list()
count=1
for(i in 1:length(lcart.mod1$fixed_effects)){
if(is.null(lcart.mod1$fixed_effects[[i]])){
count=count
}else{
mat[[count]] <- c(count,lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
count = count+1
}
}
mat
unlist(mat)
matrix(unlist(mat),nrow=count,byrow=T)
count
matrix(unlist(mat),nrow=(count-1),byrow=T)
mat <- list()
count=1
for(i in 1:length(lcart.mod1$fixed_effects)){
if(is.null(lcart.mod1$fixed_effects[[i]])){
count=count
}else{
mat[[count]] <- c(i,lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
count = count+1
}
}
mat
mm = matrix(unlist(mat),nrow=(count-1),byrow=T)
mm = matrix(unlist(mat),nrow=(count-1),byrow=T)
names(mm)[1] <- "node"
mm
mm = data.frame(matrix(unlist(mat),nrow=(count-1),byrow=T))
names(mm)[1] <- "node"
mm
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
c(names(lcart.mod1$fixed_effects[[i]]),names(lcart.mod1$resid.var[[i]]))
names(lcart.mod1$resid.var[[i]])
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
setwd("/Users/rjacobuc/Documents/GitHub/longRPart2_scripts")
ECLSK_1000 = read.table("Subset1000_READING_PREDICTORS_AGE.dat",
na.strings = ".")
colnames(ECLSK_1000) = c("CHILDID",
"AGE",
"OCCASION",
"GENDER",
"W1POVRTY",
"RACE",
"P1FIRKDG",
"C1FMOTOR",
"C1GMOTOR",
"T1CONTRO" ,
"T1INTERP",
"T1EXTERN" ,
"T1INTERN",
"READING")
#GENDER 1 is MALE
#RACE: 1 white non-hispanic, 2 black or af. am., 3 hispanic race specified, 4 hispanic race not specified
#Clean data: delete NAs in AGE and READING, and make sure at least ONE predictor has a value.
ECLSK_1000$RACE = as.factor(ECLSK_1000$RACE)
ECLSK_1000_noNA = ECLSK_1000
ECLSK_1000_noNA$age_5 = ECLSK_1000_noNA$AGE-5
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$GENDER),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$W1POVRTY),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$C1GMOTOR),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$P1FIRKDG),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$C1FMOTOR),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1CONTRO),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1INTERP),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1EXTERN),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1INTERN),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$RACE),]
#Split TRAINING vs TESTING
#TRAINING = ECLSK_1000_noNA[0:2500,]
#TESTING = ECLSK_1000_noNA[2501:3061,]
TRAINING = ECLSK_1000_noNA
LONGTREEResults = lrp(method="nlme",
nlme.model=READING~b0i+b1i*(1-exp(-b2*age_5)),
fixedFormula=b0i+b1i+b2~1,
rPartFormula = ~ GENDER + RACE,
group= ~ CHILDID,
randomFormula=b0i+b1i~1,
data=TRAINING,
start=c(-2,4,1))
summary(LONGTREEResults)
plot(LONGTREEResults)
lrp2Plot(LONGTREEResults)
?lrp
LONGTREEResults = lrp(method="nlme",
nlme.model=READING~b0i+b1i*(1-exp(-b2*age_5)),
fixedFormula=b0i+b1i+b2~1,
rPartFormula = ~ GENDER + RACE,
group= ~ CHILDID,
randomFormula=b0i+b1i~1,
data=TRAINING,
min.dev=5,
start=c(-2,4,1))
summary(LONGTREEResults)
lrp2Plot(LONGTREEResults)
wisc <- read.table("C:/Users/RJacobucci/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
wisc <- read.table("C:/Users/jacobucc/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
wisc <- read.table("C:/Users/rjacobuc/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
wisc <- read.table("/Users/rjacobuc//Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
names(wisc)<- c("V1","V2","V4","V6","P1","P2","P4", "P6", "Moeducat")
wisc.verb <- wisc[,c(1:4,9)]
wisc.verb$noise <- round(rnorm(nrow(wisc.verb)),2)
# create subset for plotting
ntot <- nrow(wisc.verb)    # total number of observations
wisc.verb.sel <- wisc.verb[sample(ntot, 30), ]
wisc.long <- reshape(wisc.verb, varying = c("V1", "V2", "V4", "V6"), v.names = "verbal",
times = c(1, 2, 4, 6), direction = "long")
wisc.long.sel <- reshape(wisc.verb.sel, varying = c("V1", "V2", "V4", "V6"),
v.names = "verbal", times = c(1, 2, 4, 6),
direction = "long")
head(wisc.long,3)
names(wisc.long)[3] <- "grade"
names(wisc.long.sel)[3] <- "grade"
lcart.mod1 <- lrp(method="lme",
fixedFormula=verbal ~ grade,
rPartFormula = ~ Moeducat + noise,
randomFormula=~1|id,
data=wisc.long,
control=rpart.control(cp=.01))
lrp2Plot(lcart.mod1)
summary(lrp2Plot)
summary(lcart.mod1)
lrpTreePlot(lcart.mod1)
summary(lcart.mod1)
lrp2Plot(lcart.mod1)
lrpPlot(lcart.mod1)
lrpPlot(LONGTREEResults)
setwd("/Users/rjacobuc/Documents/GitHub/longRPart2_scripts")
ECLSK_1000 = read.table("Subset1000_READING_PREDICTORS_AGE.dat",
na.strings = ".")
colnames(ECLSK_1000) = c("CHILDID",
"AGE",
"OCCASION",
"GENDER",
"W1POVRTY",
"RACE",
"P1FIRKDG",
"C1FMOTOR",
"C1GMOTOR",
"T1CONTRO" ,
"T1INTERP",
"T1EXTERN" ,
"T1INTERN",
"READING")
#GENDER 1 is MALE
#RACE: 1 white non-hispanic, 2 black or af. am., 3 hispanic race specified, 4 hispanic race not specified
#Clean data: delete NAs in AGE and READING, and make sure at least ONE predictor has a value.
ECLSK_1000$RACE = as.factor(ECLSK_1000$RACE)
ECLSK_1000_noNA = ECLSK_1000
ECLSK_1000_noNA$age_5 = ECLSK_1000_noNA$AGE-5
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$GENDER),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$W1POVRTY),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$C1GMOTOR),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$P1FIRKDG),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$C1FMOTOR),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1CONTRO),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1INTERP),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1EXTERN),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1INTERN),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$RACE),]
#Split TRAINING vs TESTING
#TRAINING = ECLSK_1000_noNA[0:2500,]
#TESTING = ECLSK_1000_noNA[2501:3061,]
TRAINING = ECLSK_1000_noNA
LONGTREEResults = lrp(method="nlme",
nlme.model=READING~b0i+b1i*(1-exp(-b2*age_5)),
fixedFormula=b0i+b1i+b2~1,
rPartFormula = ~ GENDER + RACE,
group= ~ CHILDID,
randomFormula=b0i+b1i~1,
data=TRAINING,
min.dev=5,
start=c(-2,4,1))
lrpPlot(LONGTREEResults)
library(longRPart2)
lrpPlot(lcart.mod1)
lrpPlot(LONGTREEResults)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
library(longRPart2)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
?plot.nls
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
?plot.nls
?nls
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
?plot.nls
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
lrpPlot(LONGTREEResults)
lrp2Plot(LONGTREEResults)
lrpPlot(lcart.mod1)
plot(LONGTREEResults$nlme.model)
plot(LONGTREEResults$nlmeModel)
lrpPlot(lcart.mod1)
