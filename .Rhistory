matrix(unlist(mat),byrow=T)
matrix(unlist(mat),byrow=F)
matrix(unlist(mat),nrow=count,byrow=F)
matrix(unlist(mat),nrow=count,byrow=T)
library(longRPart2)
lcart.mod1 <- lrp(method="lme",
fixedFormula=verbal ~ grade,
rPartFormula = ~ Moeducat,
randomFormula=~1|id,
data=wisc.long)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
library(longRPart2)
lcart.mod1 <- lrp(method="lme",
fixedFormula=verbal ~ grade,
rPartFormula = ~ Moeducat,
randomFormula=~1|id,
data=wisc.long)
summary(lcart.mod1)
mat <- list()
count=1
for(i in 1:length(lcart.mod1$fixed_effects)){
if(is.null(lcart.mod1$fixed_effects[[i]])){
count=count
}else{
count = count+1
mat[[count]] <- c(count,lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
}
}
mat
i=1
lcart.mod1$fixed_effects[[i]]
is.null(lcart.mod1$fixed_effects[[i]])
mat <- list()
count=1
for(i in 1:length(lcart.mod1$fixed_effects)){
if(is.null(lcart.mod1$fixed_effects[[i]])){
count=count
}else{
mat[[count]] <- c(count,lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
count = count+1
}
}
mat
unlist(mat)
matrix(unlist(mat),nrow=count,byrow=T)
count
matrix(unlist(mat),nrow=(count-1),byrow=T)
mat <- list()
count=1
for(i in 1:length(lcart.mod1$fixed_effects)){
if(is.null(lcart.mod1$fixed_effects[[i]])){
count=count
}else{
mat[[count]] <- c(i,lcart.mod1$fixed_effects[[i]],lcart.mod1$resid.var[[i]])
count = count+1
}
}
mat
mm = matrix(unlist(mat),nrow=(count-1),byrow=T)
mm = matrix(unlist(mat),nrow=(count-1),byrow=T)
names(mm)[1] <- "node"
mm
mm = data.frame(matrix(unlist(mat),nrow=(count-1),byrow=T))
names(mm)[1] <- "node"
mm
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
c(names(lcart.mod1$fixed_effects[[i]]),names(lcart.mod1$resid.var[[i]]))
names(lcart.mod1$resid.var[[i]])
library(longRPart2)
summary(lcart.mod1)
library(longRPart2)
summary(lcart.mod1)
setwd("/Users/rjacobuc/Documents/GitHub/longRPart2_scripts")
ECLSK_1000 = read.table("Subset1000_READING_PREDICTORS_AGE.dat",
na.strings = ".")
colnames(ECLSK_1000) = c("CHILDID",
"AGE",
"OCCASION",
"GENDER",
"W1POVRTY",
"RACE",
"P1FIRKDG",
"C1FMOTOR",
"C1GMOTOR",
"T1CONTRO" ,
"T1INTERP",
"T1EXTERN" ,
"T1INTERN",
"READING")
#GENDER 1 is MALE
#RACE: 1 white non-hispanic, 2 black or af. am., 3 hispanic race specified, 4 hispanic race not specified
#Clean data: delete NAs in AGE and READING, and make sure at least ONE predictor has a value.
ECLSK_1000$RACE = as.factor(ECLSK_1000$RACE)
ECLSK_1000_noNA = ECLSK_1000
ECLSK_1000_noNA$age_5 = ECLSK_1000_noNA$AGE-5
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$GENDER),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$W1POVRTY),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$C1GMOTOR),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$P1FIRKDG),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$C1FMOTOR),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1CONTRO),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1INTERP),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1EXTERN),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1INTERN),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$RACE),]
#Split TRAINING vs TESTING
#TRAINING = ECLSK_1000_noNA[0:2500,]
#TESTING = ECLSK_1000_noNA[2501:3061,]
TRAINING = ECLSK_1000_noNA
LONGTREEResults = lrp(method="nlme",
nlme.model=READING~b0i+b1i*(1-exp(-b2*age_5)),
fixedFormula=b0i+b1i+b2~1,
rPartFormula = ~ GENDER + RACE,
group= ~ CHILDID,
randomFormula=b0i+b1i~1,
data=TRAINING,
start=c(-2,4,1))
summary(LONGTREEResults)
plot(LONGTREEResults)
lrp2Plot(LONGTREEResults)
?lrp
LONGTREEResults = lrp(method="nlme",
nlme.model=READING~b0i+b1i*(1-exp(-b2*age_5)),
fixedFormula=b0i+b1i+b2~1,
rPartFormula = ~ GENDER + RACE,
group= ~ CHILDID,
randomFormula=b0i+b1i~1,
data=TRAINING,
min.dev=5,
start=c(-2,4,1))
summary(LONGTREEResults)
lrp2Plot(LONGTREEResults)
wisc <- read.table("C:/Users/RJacobucci/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
wisc <- read.table("C:/Users/jacobucc/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
wisc <- read.table("C:/Users/rjacobuc/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
wisc <- read.table("/Users/rjacobuc//Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
names(wisc)<- c("V1","V2","V4","V6","P1","P2","P4", "P6", "Moeducat")
wisc.verb <- wisc[,c(1:4,9)]
wisc.verb$noise <- round(rnorm(nrow(wisc.verb)),2)
# create subset for plotting
ntot <- nrow(wisc.verb)    # total number of observations
wisc.verb.sel <- wisc.verb[sample(ntot, 30), ]
wisc.long <- reshape(wisc.verb, varying = c("V1", "V2", "V4", "V6"), v.names = "verbal",
times = c(1, 2, 4, 6), direction = "long")
wisc.long.sel <- reshape(wisc.verb.sel, varying = c("V1", "V2", "V4", "V6"),
v.names = "verbal", times = c(1, 2, 4, 6),
direction = "long")
head(wisc.long,3)
names(wisc.long)[3] <- "grade"
names(wisc.long.sel)[3] <- "grade"
lcart.mod1 <- lrp(method="lme",
fixedFormula=verbal ~ grade,
rPartFormula = ~ Moeducat + noise,
randomFormula=~1|id,
data=wisc.long,
control=rpart.control(cp=.01))
lrp2Plot(lcart.mod1)
summary(lrp2Plot)
summary(lcart.mod1)
lrpTreePlot(lcart.mod1)
summary(lcart.mod1)
lrp2Plot(lcart.mod1)
lrpPlot(lcart.mod1)
lrpPlot(LONGTREEResults)
setwd("/Users/rjacobuc/Documents/GitHub/longRPart2_scripts")
ECLSK_1000 = read.table("Subset1000_READING_PREDICTORS_AGE.dat",
na.strings = ".")
colnames(ECLSK_1000) = c("CHILDID",
"AGE",
"OCCASION",
"GENDER",
"W1POVRTY",
"RACE",
"P1FIRKDG",
"C1FMOTOR",
"C1GMOTOR",
"T1CONTRO" ,
"T1INTERP",
"T1EXTERN" ,
"T1INTERN",
"READING")
#GENDER 1 is MALE
#RACE: 1 white non-hispanic, 2 black or af. am., 3 hispanic race specified, 4 hispanic race not specified
#Clean data: delete NAs in AGE and READING, and make sure at least ONE predictor has a value.
ECLSK_1000$RACE = as.factor(ECLSK_1000$RACE)
ECLSK_1000_noNA = ECLSK_1000
ECLSK_1000_noNA$age_5 = ECLSK_1000_noNA$AGE-5
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$GENDER),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$W1POVRTY),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$C1GMOTOR),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$P1FIRKDG),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$C1FMOTOR),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1CONTRO),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1INTERP),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1EXTERN),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$T1INTERN),]
ECLSK_1000_noNA = ECLSK_1000_noNA[!is.na(ECLSK_1000_noNA$RACE),]
#Split TRAINING vs TESTING
#TRAINING = ECLSK_1000_noNA[0:2500,]
#TESTING = ECLSK_1000_noNA[2501:3061,]
TRAINING = ECLSK_1000_noNA
LONGTREEResults = lrp(method="nlme",
nlme.model=READING~b0i+b1i*(1-exp(-b2*age_5)),
fixedFormula=b0i+b1i+b2~1,
rPartFormula = ~ GENDER + RACE,
group= ~ CHILDID,
randomFormula=b0i+b1i~1,
data=TRAINING,
min.dev=5,
start=c(-2,4,1))
lrpPlot(LONGTREEResults)
library(longRPart2)
lrpPlot(lcart.mod1)
lrpPlot(LONGTREEResults)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
library(longRPart2)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
?plot.nls
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
?plot.nls
?nls
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
?plot.nls
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
library(longRPart2)
lrpTreePlot(LONGTREEResults)
lrpPlot(LONGTREEResults)
lrp2Plot(LONGTREEResults)
lrpPlot(lcart.mod1)
plot(LONGTREEResults$nlme.model)
plot(LONGTREEResults$nlmeModel)
lrpPlot(lcart.mod1)
library(longRPart2)
wisc <- read.table("C:/Users/RJacobucci/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
wisc <- read.table("C:/Users/jacobucc/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
wisc <- read.table("C:/Users/rjacobuc/Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
wisc <- read.table("/Users/rjacobuc//Documents/GitHub/EDM_Labs/2015/wisc4vpe.dat")
names(wisc)<- c("V1","V2","V4","V6","P1","P2","P4", "P6", "Moeducat")
wisc.verb <- wisc[,c(1:4,9)]
wisc.verb$noise <- round(rnorm(nrow(wisc.verb)),2)
# create subset for plotting
ntot <- nrow(wisc.verb)    # total number of observations
wisc.verb.sel <- wisc.verb[sample(ntot, 30), ]
wisc.long <- reshape(wisc.verb, varying = c("V1", "V2", "V4", "V6"), v.names = "verbal",
times = c(1, 2, 4, 6), direction = "long")
wisc.long.sel <- reshape(wisc.verb.sel, varying = c("V1", "V2", "V4", "V6"),
v.names = "verbal", times = c(1, 2, 4, 6),
direction = "long")
head(wisc.long,3)
names(wisc.long)[3] <- "grade"
names(wisc.long.sel)[3] <- "grade"
#fm1 <- nlme(height ~ SSasymp(age, Asym, R0, lrc),
#            data = Loblolly,
#            fixed = Asym + R0 + lrc ~ 1,
#            random = Asym ~ 1,
#            start = c(Asym = 103, R0 = -8.5, lrc = -3.3))
#mix1 <- nlme(verbal ~ SSasymp(), random = ~ grade | id,start=c(1,1),
#             fixed = b0i + b1i | 1,
#            data = wisc.long, method="ML" )
#summary(mix1) # get same estimates as in LGM, notice SD not VAR
## longRPart2
#lme1 <- lme(verbal ~ grade,random=~1|id,wisc.long)
lcart.mod1 <- lrp(method="lme",
fixedFormula=verbal ~ grade,
rPartFormula = ~ Moeducat + noise,
randomFormula=~1|id,
data=wisc.long,
control=rpart.control(cp=.01))
z = runif(200, 0, 10)
b0i = matrix(NA,200,1)
b1i = matrix(NA,200,1)
y = matrix(NA,200,6)
id = matrix(NA,200,1)
beta_0 = matrix(NA,200,1)
beta_1 = matrix(NA,200,1)
psi2_0 = matrix(NA,200,1)
psi2_1 = matrix(NA,200,1)
sigma2_u = matrix(NA,200,1)
for(i in 1:200){
if (z[i] > 5) {beta_0[i]   = 10}  else {beta_0[i]   = 20}
if (z[i] > 5) {beta_1[i]   = 10}  else {beta_1[i]   = 5}
if (z[i] > 5) {psi2_0[i]   = 100} else {psi2_0[i]   = 64}
if (z[i] > 5) {psi2_1[i]   = 25}  else {psi2_1[i]   = 16}
if (z[i] > 5) {sigma2_u[i] = 4}   else {sigma2_u[i] = 4}
b0i[i] = beta_0[i] + rnorm(1,0,sqrt(psi2_0[i]))
b1i[i] = beta_1[i] + rnorm(1,0,sqrt(psi2_1[i]))
id[i] = i
for(t in 1:6){
y[i,t] = b0i[i] + b1i[i] * (t - 1)/5 + rnorm(1,0,sqrt(sigma2_u))
}
}
ex.data.1 = as.data.frame(cbind(id,y,z))
names(ex.data.1)= c('id','y1','y2','y3','y4','y5','y6','z')
head(ex.data.1)
# Convert to Long Form
ex.data.2 = reshape(ex.data.1, idvar='id',
varying=c('y1','y2','y3','y4','y5','y6'),
times=c(0,1,2,3,4,5),
v.names='y', direction='long')
ex.data.2 = ex.data.2[order(ex.data.2$id, ex.data.2$time),]
head(ex.data.2)
### Beginning of what package would be
## Things to Specify
#1 longitudinal model (e.g., y~b0i+b1i*(time/5))
#2 fixed-effect parameters (e.g., fixed=b0i+b1i~1)
#3 random-effect parameters (e.g., random=b0i+b1i~1)
#4 data
#5 Participant ID variable (e.g., group=~id)
#6 Starting values for fixed-effects parameters (e.g., start=c(10,5))
#7 Covariates used for splitting
#8 Model Type ('Fixed', 'Fixed+Ran', 'Fixed+Ran+Res')
#9 Minimum number of participants per node (Nmin)
#10 Criterion (e.g., Change in -2LL, p-value, CV)
# Run NLME
require(nlme)
model.0 = nlme(y~b0i+b1i*time,
data=ex.data.2,
fixed=b0i+b1i~1,
random=b0i+b1i~1,
group=~id,
start=c(10,5))
summary(model.0)
dev.root = -2 * model.0$logLik
lcart.mod1 <- lrp(method="nlme",
nlme.model=y~b0i+b1i*time,
fixedFormula=b0i+b1i~1,
rPartFormula = ~ z,
group= ~ id,
randomFormula=b0i+b1i~1,
data=ex.data.2,
start=c(10,5))
str(ex.data.2)
summary(lcart.mod1)
ex.data.3 <- ex.data.2[1:600,]
lcart.mod1 <- lrp(method="nlme",
nlme.model=y~b0i+b1i*time,
fixedFormula=b0i+b1i~1,
rPartFormula = ~ z,
group= ~ id,
randomFormula=b0i+b1i~1,
data=ex.data.3,
start=c(10,5))
plot(lcart.mod1)
lrp2Plot(lcart.mod1) # not working
lrpTreePlot(lcart.mod1$rpart_out)
library(devtools)
?use_data
use_data(ex.data.3)
library(longRPart2)
model.0 = nlme(y~b0i+b1i*time,
data=ex.data.3,
fixed=b0i+b1i~1,
random=b0i+b1i~1,
group=~id,
start=c(10,5))
model.0
plot(lcart.mod1)
lrp2Plot(lcart.mod1)
summary(lcart.mod1)
lrpPlot(lcart.mod1)
library(longRPart2)
library(longRPart2)
head(ex.data.3)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
data(ex.data.3)
lcart.mod1 <- lrp(method="nlme",
nlme.model=y~b0i+b1i*time,
fixedFormula=b0i+b1i~1,
rPartFormula = ~ z,
group= ~ id,
randomFormula=b0i+b1i~1,
data=ex.data.3,
start=c(10,5))
summary(lcart.mod1)
plot(lcart.mod1)
lrp2Plot(lcart.mod1)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
lcart.mod0 <- lrp(method="nlme",
nlme.model=y~b0i+b1i*time,
fixedFormula=b0i+b1i~1,
rPartFormula = ~ z,
group= ~ id,
randomFormula=b0i+b1i~1,
data=ex.data.3[1:30,],
start=c(10,5))
data(ex.data.3)
lcart.mod0 <- lrp(method="nlme",
nlme.model=y~b0i+b1i*time,
fixedFormula=b0i+b1i~1,
rPartFormula = ~ z,
group= ~ id,
randomFormula=b0i+b1i~1,
data=ex.data.3[1:30,],
start=c(10,5))
lcart.mod0 <- lrp(method="nlme",
nlme.model=y~b0i+b1i*time,
fixedFormula=b0i+b1i~1,
rPartFormula = ~ z,
group= ~ id,
randomFormula=b0i+b1i~1,
data=ex.data.3[1:20,],
start=c(10,5))
library(longRPart2)
lcart.mod1 <- lrp(method="nlme",
nlme.model=y~b0i+b1i*time,
fixedFormula=b0i+b1i~1,
rPartFormula = ~ z,
group= ~ id,
randomFormula=b0i+b1i~1,
data=ex.data.3,
start=c(10,5))
data("ex.data.3")
lcart.mod1 <- lrp(method="nlme",
nlme.model=y~b0i+b1i*time,
fixedFormula=b0i+b1i~1,
rPartFormula = ~ z,
group= ~ id,
randomFormula=b0i+b1i~1,
data=ex.data.3,
start=c(10,5))
save.image("example.RData")
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
library(longRPart2)
save(lcart.mod1,"example.RData")
?save
save(lcart.mod1,file="example.RData")
library(longRPart2)
library(longRPart2)
data("example")
lcart.mod1
data("ex.data.3")
ex.data.3
?data
library(longRPart2)
library(longRPart2)
library(devtools)
?use_data
devtools::use_data(example)
library(longRPart2)
library(longRPart2)
str(example)
str(example.rds)
devtools::use_data(lcart.mod1)
library(longRPart2)
library(longRPart2)
library(longRPart2)
